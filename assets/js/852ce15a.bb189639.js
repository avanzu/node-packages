"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[771],{4417:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"kernel/kernel/container-and-builder","title":"The Container and ContainerBuilder","description":"The dependency injection container is the backbone of the kernel-based application architecture. It centralizes dependency management and promotes a clean, modular structure. Under the hood, this kernel uses Awilix, but you won\u2019t need to interact with it directly unless you want to.","source":"@site/docs/kernel/2000-kernel/1019-container-and-builder.md","sourceDirName":"kernel/2000-kernel","slug":"/kernel/kernel/container-and-builder","permalink":"/node-packages/docs/kernel/kernel/container-and-builder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1019,"frontMatter":{"title":"The Container and ContainerBuilder","sidebar_label":"The Container and ContainerBuilder"},"sidebar":"kernelSidebar","previous":{"title":"Bootstrapping","permalink":"/node-packages/docs/kernel/kernel/bootstrapping"},"next":{"title":"Controllers","permalink":"/node-packages/docs/kernel/kernel/controllers"}}');var s=r(4848),t=r(8453);const o={title:"The Container and ContainerBuilder",sidebar_label:"The Container and ContainerBuilder"},l=void 0,a={},c=[{value:"What is the Container?",id:"what-is-the-container",level:2},{value:"The <code>ContainerBuilder</code>",id:"the-containerbuilder",level:2},{value:"Registering Services",id:"registering-services",level:3},{value:"Feature modules",id:"feature-modules",level:2},{value:"Advanced: <code>ContainerModule</code> Generics \u2013 <code>Exports</code> and <code>Imports</code>",id:"advanced-containermodule-generics--exports-and-imports",level:2},{value:"Declaring Exports and Imports",id:"declaring-exports-and-imports",level:2},{value:"Composing the Full Container",id:"composing-the-full-container",level:3},{value:"Why It Matters",id:"why-it-matters",level:3},{value:"Optional Runtime Checking",id:"optional-runtime-checking",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The dependency injection container is the backbone of the kernel-based application architecture. It centralizes dependency management and promotes a clean, modular structure. Under the hood, this kernel uses ",(0,s.jsx)(n.a,{href:"https://github.com/jeffijoe/awilix",children:"Awilix"}),", but you won\u2019t need to interact with it directly unless you want to."]}),"\n",(0,s.jsx)(n.h2,{id:"what-is-the-container",children:"What is the Container?"}),"\n",(0,s.jsxs)(n.p,{children:["The container is where your application services (e.g., loggers, database clients, services) are registered. It\u2019s also how dependencies are resolved during request handling. You define your own ",(0,s.jsx)(n.code,{children:"Container"})," type based on your app\u2019s services, enabling full type safety throughout the codebase."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"the-containerbuilder",children:["The ",(0,s.jsx)(n.code,{children:"ContainerBuilder"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ContainerBuilder"})," is responsible for constructing and configuring the application container. This includes:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Registering core services"}),"\n",(0,s.jsx)(n.li,{children:"Adding feature modules"}),"\n",(0,s.jsx)(n.li,{children:"Providing access to the composed container for the kernel"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// containerBuilder.ts\n\nimport { createContainer, asClass, asFunction, asValue } from 'awilix'\n\nexport class ContainerBuilder extends Kernel.AbstractContainerBuilder<Container> {\n\n    async buildMainContainer(container: Container): Promise<void> {\n        container.register({\n            config: asValue(appConfig),\n            logger: asFunction(createLogger).singleton(),\n            db: asFunction(createDatabaseConnection).singleton(),\n            // ...\n        })\n    }\n\n    getModules(): ContainerModule[] {\n        return [ new UserModule() ]\n    }\n\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"registering-services",children:"Registering Services"}),"\n",(0,s.jsxs)(n.p,{children:["You typically use a combination of Awilix\u2019s ",(0,s.jsx)(n.code,{children:"asValue"}),", ",(0,s.jsx)(n.code,{children:"asFunction"}),", and ",(0,s.jsx)(n.code,{children:"asClass"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"container.register({\n    userService: asClass(UserService).scoped(),\n    db: asFunction(createDatabaseConnection).singleton(),\n    config: asValue(appConfig)\n   })\n"})}),"\n",(0,s.jsx)(n.p,{children:"Service lifetimes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"singleton"}),": One instance per app lifecycle"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"scoped"}),": One instance per request"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"transient"}),": New instance every time it is resolved"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"feature-modules",children:"Feature modules"}),"\n",(0,s.jsxs)(n.p,{children:["Feature modules can encapsulate their own services and event handlers using the ",(0,s.jsx)(n.code,{children:"ContainerModule"})," interface:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export class UserModule implements ContainerModule {\n    getName() { return 'UserModule' }\n\n    configure(container) {\n        container.register({\n                userService: asClass(UserService).scoped()\n            })\n        }\n\n    getEventHandlers() { return [] }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["These are returned from ",(0,s.jsx)(n.code,{children:"getModules()"})," in your container builder and are automatically applied."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"advanced-containermodule-generics--exports-and-imports",children:["Advanced: ",(0,s.jsx)(n.code,{children:"ContainerModule"})," Generics \u2013 ",(0,s.jsx)(n.code,{children:"Exports"})," and ",(0,s.jsx)(n.code,{children:"Imports"})]}),"\n",(0,s.jsx)(n.p,{children:"To promote strong typing and modular architecture, the ContainerModule interface accepts two generic parameters:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"ContainerModule<Exports extends {}, Imports extends AppServices = AppServices>\n"})}),"\n",(0,s.jsx)(n.p,{children:"These allow you to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Declare what services a module provides (",(0,s.jsx)(n.code,{children:"Exports"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Specify what services a module depends on (",(0,s.jsx)(n.code,{children:"Imports"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This design encourages clear separation of concerns and improves type safety across the application."}),"\n",(0,s.jsx)(n.h2,{id:"declaring-exports-and-imports",children:"Declaring Exports and Imports"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// services/UserService.ts\nexport class UserService {\n  // ...\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// modules/UserModule.ts\nimport { ContainerModule } from '@avanzu/kernel'\n\nexport interface UserModuleExports {\n  userService: UserService\n}\n\nexport interface UserModuleImports {\n  logger: Logger\n}\n\nexport class UserModule\n  implements ContainerModule<UserModuleExports, UserModuleImports> {\n\n  getName() {\n    return 'UserModule'\n  }\n\n  configure(container) {\n    container.register({\n      userService: asClass(UserService).scoped()\n    })\n  }\n\n  getEventHandlers() {\n    return []\n  }\n}\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"In this case:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The module exports a ",(0,s.jsx)(n.code,{children:"userService"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The module expects a ",(0,s.jsx)(n.code,{children:"logger"})," to already be registered."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"composing-the-full-container",children:"Composing the Full Container"}),"\n",(0,s.jsx)(n.p,{children:"You can build up your application\u2019s full container type using intersections of all module exports:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { UserModuleExports } from './modules/UserModule'\nimport { AuthModuleExports } from './modules/AuthModule'\n\nexport type Services =   UserModuleExports &  AuthModuleExports\n\nexport type Container = AwilixContainer<Services>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"why-it-matters",children:"Why It Matters"}),"\n",(0,s.jsx)(n.p,{children:"This strategy:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Helps to prevents circular dependencies by making module contracts explicit"}),"\n",(0,s.jsx)(n.li,{children:"Allows the kernel to guide static analysis and auto-complete"}),"\n",(0,s.jsx)(n.li,{children:"Makes it easier to onboard new developers by surfacing module boundaries"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optional-runtime-checking",children:"Optional Runtime Checking"}),"\n",(0,s.jsx)(n.p,{children:"While the kernel doesn't enforce runtime verification of Imports, you could write helper tooling to verify those constraints during development if needed. But typically, TypeScript alone is sufficient here."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var i=r(6540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);