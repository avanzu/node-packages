"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[585],{6245:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"kernel/kernel/core-concepts","title":"Core concepts","description":"This section covers the fundamental building blocks provided by the @avanzu/kernel package.","source":"@site/docs/kernel/2000-kernel/1000-core-concepts.md","sourceDirName":"kernel/2000-kernel","slug":"/kernel/kernel/core-concepts","permalink":"/node-packages/docs/kernel/kernel/core-concepts","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1000,"frontMatter":{"title":"Core concepts","sidebar_label":"Core concepts"},"sidebar":"kernelSidebar","previous":{"title":"Introduction","permalink":"/node-packages/docs/kernel/welcome/index"},"next":{"title":"Owning Your Application Types","permalink":"/node-packages/docs/kernel/kernel/owning-your-types"}}');var s=r(4848),i=r(8453);const o={title:"Core concepts",sidebar_label:"Core concepts"},l=void 0,c={},a=[{value:"Kernel",id:"kernel",level:2},{value:"Container Modules",id:"container-modules",level:2},{value:"AbstractContainerBuilder",id:"abstractcontainerbuilder",level:2}];function d(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This section covers the fundamental building blocks provided by the ",(0,s.jsx)(n.code,{children:"@avanzu/kernel"})," package."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"kernel",children:"Kernel"}),"\n",(0,s.jsx)(n.p,{children:"The kernel acts as the central coordinator for your application\u2019s startup lifecycle. It initializes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The dependency injection container"}),"\n",(0,s.jsx)(n.li,{children:"Middleware and routing"}),"\n",(0,s.jsx)(n.li,{children:"Lifecycle-aware services"}),"\n",(0,s.jsx)(n.li,{children:"Optional event handlers via the message bus"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The kernel doesn\u2019t enforce an application structure \u2014 it just wires things together based on what you plug in."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"container-modules",children:"Container Modules"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"ContainerModule"})," encapsulates a cohesive set of services or a feature slice. It defines a contract for what it ",(0,s.jsx)(n.strong,{children:"registers"})," and ",(0,s.jsx)(n.strong,{children:"depends on"}),", and optionally provides event handlers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ContainerModule<Exports, Imports> {\n  getName(): string\n  configure(container: Container<Exports & Imports>): void\n  getEventHandlers(): EventHandlerSpec[]\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"This makes feature boundaries explicit and modular."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"abstractcontainerbuilder",children:"AbstractContainerBuilder"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AbstractContainerBuilder"})," is a convenience base class that implements the ",(0,s.jsx)(n.code,{children:"ContainerBuilder"})," interface. It wires together multiple ",(0,s.jsx)(n.code,{children:"ContainerModule"}),"s and gives you hooks to:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Register modules"}),"\n",(0,s.jsx)(n.li,{children:"Add middleware"}),"\n",(0,s.jsx)(n.li,{children:"Configure the message bus"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can override the following methods:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"abstract class AbstractContainerBuilder<TContainer> {\n  getModules(): ContainerModule<any>[] { /* ... */ }\n\n  configureContainer(container: TContainer): void { /* optional */ }\n\n  getMiddlewares(): Middleware[] { /* optional */ }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Using this base class is optional \u2014 you're free to roll your own builder as long as it matches the interface."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);