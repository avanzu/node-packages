"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[344],{4575:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"kernel/kernel/openapi","title":"OpenAPI Integration","description":"In the kernel architecture, controllers are intentionally positioned as boundary components \u2014 minimal integration or glue code responsible for handling HTTP concerns. As such, it\u2019s perfectly fine to go all-in on tightly coupling them with kernel-provided decorators and tooling, including automatic OpenAPI documentation generation.","source":"@site/docs/kernel/2000-kernel/1025-openapi.md","sourceDirName":"kernel/2000-kernel","slug":"/kernel/kernel/openapi","permalink":"/node-packages/docs/kernel/kernel/openapi","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1025,"frontMatter":{"title":"OpenAPI Integration","sidebar_label":"OpenAPI Integration"},"sidebar":"kernelSidebar","previous":{"title":"Controllers","permalink":"/node-packages/docs/kernel/kernel/controllers"},"next":{"title":"Middleware","permalink":"/node-packages/docs/kernel/kernel/middleware"}}');var r=t(4848),i=t(8453);const s={title:"OpenAPI Integration",sidebar_label:"OpenAPI Integration"},a=void 0,l={},c=[{value:"Key Concepts",id:"key-concepts",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Controller Example",id:"controller-example",level:3},{value:"Endpoint Example",id:"endpoint-example",level:3},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In the kernel architecture, ",(0,r.jsx)(n.strong,{children:"controllers are intentionally positioned as boundary components"})," \u2014 minimal integration or glue code responsible for handling HTTP concerns. As such, it\u2019s perfectly fine to go all-in on tightly coupling them with kernel-provided decorators and tooling, including automatic OpenAPI documentation generation."]}),"\n",(0,r.jsx)(n.p,{children:"This keeps the domain code clean and unaffected by infrastructure concerns, while still offering a rich, declarative interface at the edges of the system."}),"\n",(0,r.jsx)(n.h2,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@ApiDocs()"})," \u2014 Assigns OpenAPI metadata to controllers or methods."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Contract()"})," \u2014 Describes endpoint behavior, including summary, parameters, and response shapes."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsx)(n.p,{children:"Controllers and endpoints can be annotated with OpenAPI metadata. A dedicated endpoint can then expose a generated OpenAPI JSON spec, ready for Swagger UI or Redoc."}),"\n",(0,r.jsx)(n.h3,{id:"controller-example",children:"Controller Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"@ApiDocs({\n  tag: {\n    name: 'Maintainance',\n    description: 'Maintainance related endpoints helping to operate the service properly',\n  }\n})\n@Controller()\nexport class AppController {\n  constructor(protected info: AppInfo) {}\n\n  @Get('/health')\n  async getHealth(context: Context) {\n    context.status = 200\n    context.body = 'OK'\n  }\n\n  @Get('/specs.json')\n  async generateApiDocs(context: Context) {\n    const generator = new OpenApi({\n      description: this.info.description,\n      version: this.info.version,\n      title: this.info.name,\n    }, context.scope)\n\n    context.body = generator.generate()\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": You can define your own ",(0,r.jsx)(n.code,{children:"/specs.json"})," route or any custom route to serve the generated spec."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-example",children:"Endpoint Example"}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"@Contract()"})," decorator to provide detailed OpenAPI metadata for an endpoint:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"@ApiDocs({ tag: { name: 'Audit', description: 'View audit logs' } })\n@Controller('/audit', authenticate('jwt'))\nexport class AuditController {\n\n  constructor(private auditRepository: AuditRepository) {}\n\n  @Contract({\n    info: () => ({ summary: 'Get paginated audit logs' }),\n    query: () => AuditQuery,\n    response: () => ({ 200: Paginated(AuditLogSchema) }),\n    errorCodes: () => [400, 401, 403, 500],\n  })\n  @Get('/')\n  async listAuditRecords(context: Context) {\n    const result = await this.auditRepository.find(context.query)\n    context.body = result\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Embrace Controller Coupling"}),": It\u2019s okay to deeply integrate controllers with decorators \u2014 they are not part of your domain model."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Keep Contracts Close"}),": Defining query and response types inline via ",(0,r.jsx)(n.code,{children:"@Contract()"})," ensures they\u2019re never out of sync."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use JSON Schema"}),": Contracts rely on JSON schema-compatible declarations to ensure tooling like Swagger can interpret them."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expose via Controller"}),": Since spec generation is just another handler, you decide where and how to expose it."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);