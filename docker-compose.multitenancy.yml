version: '3'
services:
    base:
        image: node-packages:latest
        pull_policy: never
        build:
            context: .
            dockerfile: ${DOCKERFILE:-Dockerfile}
        deploy:
            replicas: 0

    authentication-foo:
        extends: { service: base }
        command: ['debug']
        environment:
            PORT: 3001
            DEBUG_PORT: 9001
            HOST: authentication-foo
            SERVICE: authentication
            TENANT: foo
            NODE_ENV: development
            MONGO_URL: $MONGO_DSN
            NAMESPACE: '/foo/auth'
        env_file: [{ path: ./.env, required: true }]
        ports: [3001:3001]
        volumes:
            - ./node_modules:/opt/app/node_modules
            - ./packages:/opt/app/packages
            - ./services/authentication:/opt/app/services/authentication
        deploy:
            replicas: 1
        depends_on:
            - mongo
            - redis
        labels:
            - "traefik.http.routers.authentication-foo.rule=PathPrefix(`/foo/auth`)"
            - "traefik.http.routers.authentication-foo.middlewares=authentication-foo-circuitbreaker@docker,authentication-foo-customheader@docker"
            # - "traefik.http.middlewares.authentication-foo-stripprefix.stripprefix.prefixes=/foo/auth"
            - "traefik.http.middlewares.authentication-foo-customheader.headers.customrequestheaders.X-Tenant=foo"
            - "traefik.http.middlewares.authentication-foo-circuitbreaker.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 100"

    authentication-bar:
        extends: { service: base }
        command: ['debug']
        environment:
            PORT: 3002
            DEBUG_PORT: 9002
            HOST: authentication-bar
            SERVICE: authentication
            TENANT: bar
            NODE_ENV: development
            MONGO_URL: $MONGO_DSN
            NAMESPACE: '/bar/auth'
        env_file: [{ path: ./.env, required: true }]
        ports: [3002:3002]
        volumes:
            - ./node_modules:/opt/app/node_modules
            - ./packages:/opt/app/packages
            - ./services/authentication:/opt/app/services/authentication
        deploy:
            replicas: 1
        depends_on:
            - mongo
            - redis
        labels:
            - "traefik.http.routers.authentication-bar.rule=PathPrefix(`/bar/auth`)"
            - "traefik.http.routers.authentication-bar.middlewares=authentication-bar-circuitbreaker@docker,authentication-bar-customheader"
            # - "traefik.http.middlewares.authentication-bar-stripprefix.stripprefix.prefixes=/bar/auth"
            - "traefik.http.middlewares.authentication-bar-customheader.headers.customrequestheaders.X-Tenant=bar"
            - "traefik.http.middlewares.authentication-bar-circuitbreaker.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 100"

    backoffice-foo:
        extends: { service: base }
        command: ['debug']
        environment:
            PORT: 3011
            DEBUG_PORT: 9011
            HOST: backoffice-foo
            SERVICE: backoffice
            TENANT: foo
            NODE_ENV: development
            MONGO_URL: $MONGO_DSN
            BASE_URL: backend.docker.local/foo
            NAMESPACE: '/foo/backoffice'
            AUTH_BASE_URL: 'http://backend/foo/auth'
        env_file: [{ path: ./.env, required: true }]
        ports: [3011:3011]
        volumes:
            - ./node_modules:/opt/app/node_modules
            - ./packages:/opt/app/packages
            - ./services/backoffice:/opt/app/services/backoffice
        deploy:
            replicas: 1
        depends_on:
            - mongo
            - redis
        labels:
            - "traefik.http.routers.backoffice-foo.rule=PathPrefix(`/foo/backoffice`)"
            - "traefik.http.routers.backoffice-foo.middlewares=backoffice-foo-circuitbreaker@docker,backoffice-foo-customheader@docker"
            #- "traefik.http.middlewares.backoffice-foo-stripprefix.stripprefix.prefixes=/foo/backoffice"
            - "traefik.http.middlewares.backoffice-foo-customheader.headers.customrequestheaders.X-Tenant=foo"
            - "traefik.http.middlewares.backoffice-foo-circuitbreaker.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 100"

    backoffice-bar:
        extends: { service: base }
        command: ['debug']
        environment:
            PORT: 3012
            DEBUG_PORT: 9012
            HOST: backoffice-bar
            SERVICE: backoffice
            TENANT: bar
            NODE_ENV: development
            MONGO_URL: $MONGO_DSN
            NAMESPACE: '/bar/backoffice'
            AUTH_BASE_URL: 'http://backend/bar/auth'
        env_file: [{ path: ./.env, required: true }]
        ports: [3012:3012]
        volumes:
            - ./node_modules:/opt/app/node_modules
            - ./packages:/opt/app/packages
            - ./services/backoffice:/opt/app/services/backoffice
        deploy:
            replicas: 1
        depends_on:
            - mongo
            - redis
        labels:
            - "traefik.http.routers.backoffice-bar.rule=PathPrefix(`/bar/backoffice`)"
            - "traefik.http.routers.backoffice-bar.middlewares=backoffice-bar-circuitbreaker@docker,backoffice-bar-customheader@docker"
            # - "traefik.http.middlewares.backoffice-bar-stripprefix.stripprefix.prefixes=/bar/backoffice"
            - "traefik.http.middlewares.backoffice-bar-customheader.headers.customrequestheaders.X-Tenant=bar"
            - "traefik.http.middlewares.backoffice-bar-circuitbreaker.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 100"

    backend:
        image: traefik:v2.11
        command: --api.insecure=true --providers.docker
        ports:
            - '80:80'
            - '8080:8080'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        deploy:
            replicas: 1
